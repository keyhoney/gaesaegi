---
description: |
  나는 지금 old-gaesaegi에 있는 내용을 gsg에 아래와 같은 기술 스텍을 적용해서 이식하고 있는 중이야.
  Gaesaegi is a Vue 3 + Vite + Vue Router + Pinia + VueFire + Tailwind CSS based
  high school math learning web application.  
  It provides a clean and elegant UI, responsive design, real-time data integration,
  gamification systems (XP, levels, coins, badges), personalized learning recommendations,
  and Firebase-powered authentication & database.  
  The app will be deployed on GitHub Pages, so routing uses createWebHashHistory for compatibility.

alwaysApply: true

style: |
  - Use Vue 3 Composition API with <script setup> exclusively
  - Use Vite as the build tool
  - Use Vue Router with createWebHashHistory for GitHub Pages deployment
  - Manage state with Pinia
  - Use VueFire for Firebase Auth, Firestore
  - Style with Tailwind CSS and Headless UI, aiming for clean, modern, high-quality design
  - Color palette: pastel tones, soft contrast, visually pleasant for long study sessions
  - Use @ path alias for imports (configure in vite.config.js)
  - Name variables and functions in camelCase, components in PascalCase
  - All Firebase access code must be placed in services/firebase.js
  - Handle all async calls with try/catch and proper error messages
  - Protect authenticated pages with router navigation guards
  - Ensure responsive design across mobile, tablet, and desktop
  - Add smooth page transition animations
  - Commit in small, single-feature increments with clear messages
   color
  - Primary: #8A4B53
  - Primary Deep: #6B383E
  - Secondary: #7E8E84
  - Accent: #C9A66B
  - Neutral 0: #FFF9F5
  - Neutral 100: #231F20
  - Border/Subtle: #F0E9E3 / #D9CEC4
  - Success/Warning/Error: #4C7A62 / #BE8D3A / #A14D4D

structure: |
  src/
    assets/         # Images, global styles
    components/     # Reusable UI components
    composables/    # Reusable logic with Composition API
    services/       # External services like firebase.js
    stores/         # Pinia stores
    views/          # Page-level components
    router/         # Vue Router configuration
    App.vue
    main.js

workflow: |
  1. Initialize project with Vite + Vue 3 + Router + Pinia + VueFire + Tailwind CSS
  2. Configure GitHub Pages deployment
  3. Implement Firebase initialization with environment variables
  4. Build core pages: Login, Register, Dashboard, Problems, ProblemDetail, Profile
  5. Add gamification and coin systems
  6. Integrate personalized learning recommendation system
  7. Optimize UI/UX and performance
  8. Deploy to GitHub Pages and set up CI/CD
---